  Tutorial 3.cpp
Tutorial 3.cpp(29): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\stdio.h(205): note: see declaration of 'fopen'
Tutorial 3.cpp(33): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\stdio.h(1193): note: see declaration of 'fscanf'
Tutorial 3.cpp(105): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(737): warning C4244: 'initializing': conversion from 'int' to 'float', possible loss of data
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(857): note: see reference to function template instantiation 'void std::allocator<_Ty>::construct<_Objty,int&>(_Objty *,int &)' being compiled
          with
          [
              _Ty=float,
              _Objty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(857): note: see reference to function template instantiation 'void std::allocator<_Ty>::construct<_Objty,int&>(_Objty *,int &)' being compiled
          with
          [
              _Ty=float,
              _Objty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(996): note: see reference to function template instantiation 'void std::allocator_traits<_Alloc>::construct<_Ty,int&>(std::allocator<_Ty> &,_Objty *,int &)' being compiled
          with
          [
              _Alloc=std::allocator<float>,
              _Ty=float,
              _Objty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory0(995): note: see reference to function template instantiation 'void std::allocator_traits<_Alloc>::construct<_Ty,int&>(std::allocator<_Ty> &,_Objty *,int &)' being compiled
          with
          [
              _Alloc=std::allocator<float>,
              _Ty=float,
              _Objty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(225): note: see reference to function template instantiation 'void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,int&>(_Ty *,int &)' being compiled
          with
          [
              _Ty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(225): note: see reference to function template instantiation 'void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,int&>(_Ty *,int &)' being compiled
          with
          [
              _Ty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(251): note: see reference to function template instantiation '_FwdIt *std::_Uninitialized_copy_al_unchecked1<_InIt,_FwdIt,std::allocator<_Ty>>(_InIt,_InIt,_FwdIt,std::_Wrap_alloc<std::allocator<_Ty>> &,std::_General_ptr_iterator_tag,std::_Any_tag)' being compiled
          with
          [
              _FwdIt=float *,
              _InIt=int *,
              _Ty=float
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\xmemory(264): note: see reference to function template instantiation '_FwdIt *std::_Uninitialized_copy_al_unchecked<int*,_Iter,std::allocator<_Ty>>(_InIt,_InIt,_FwdIt,std::_Wrap_alloc<std::allocator<_Ty>> &)' being compiled
          with
          [
              _FwdIt=float *,
              _Iter=float *,
              _Ty=float,
              _InIt=int *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1653): note: see reference to function template instantiation '_FwdIt *std::_Uninitialized_copy<_Iter,float*,std::allocator<_Ty>>(_InIt,_InIt,_FwdIt,std::_Wrap_alloc<std::allocator<_Ty>> &)' being compiled
          with
          [
              _FwdIt=float *,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>,
              _Ty=float,
              _InIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1436): note: see reference to function template instantiation 'float *std::vector<float,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,float *)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1436): note: see reference to function template instantiation 'float *std::vector<float,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,float *)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1375): note: see reference to function template instantiation 'void std::vector<float,std::allocator<_Ty>>::_Insert<_Iter>(std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float>>>,_Iter,_Iter,std::forward_iterator_tag)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\vector(1375): note: see reference to function template instantiation 'void std::vector<float,std::allocator<_Ty>>::_Insert<_Iter>(std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float>>>,_Iter,_Iter,std::forward_iterator_tag)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  Tutorial 3.cpp(45): note: see reference to function template instantiation 'std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float>>> std::vector<float,std::allocator<_Ty>>::insert<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>>(std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float>>>,_Iter,_Iter)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  Tutorial 3.cpp(45): note: see reference to function template instantiation 'std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float>>> std::vector<float,std::allocator<_Ty>>::insert<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>>(std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float>>>,_Iter,_Iter)' being compiled
          with
          [
              _Ty=float,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int>>>
          ]
  Generating code
  2 of 744 functions ( 0.3%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    4 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  Tutorial 3.vcxproj -> C:\Users\Computing\Documents\GitHub\Parallel-Computing\OpenCL Tutorials\x64\Release\Tutorial 3.exe
  Tutorial 3.vcxproj -> C:\Users\Computing\Documents\GitHub\Parallel-Computing\OpenCL Tutorials\x64\Release\Tutorial 3.pdb (Full PDB)
  my_kernels3.cl
          1 file(s) copied.
